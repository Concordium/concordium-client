name: Build and test

# Builds dependencies
# Builds and tests concordium client

on:
  pull_request:
    branches:
      - main
    paths:
    - '.github/workflows/ci.yaml'
    - '**.hs'
    - 'stack*.yaml'
    - 'package.yaml'
    - 'concordium-client.cabal'
    - 'deps/concordium-base'
    - 'deps/grpc-api'

  push:
    branches:
      - main
    paths:
    - '.github/workflows/ci.yaml'
    - '**.hs'
    - 'stack*.yaml'
    - 'package.yaml'
    - 'concordium-client.cabal'
    - 'deps/concordium-base'
    - 'deps/grpc-api'

  workflow_dispatch: # allow manual trigger

env:
  RUST: 1.53
  GHC: 8.10.4

jobs:
  concordium-client-build-and-test:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST }}
          override: true
      - uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ env.GHC }}
      - name: Install protoc
        run: sudo apt -y install protobuf-compiler
      - name: Cache cargo and stack dependencies and targets
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.stack
            .stack-work
            deps/concordium-base/.stack-work/
            deps/concordium-base/lib/
            deps/concordium-base/rust-src/target/release/
          # Cache based on dependency versions, as well as the contents of the rust dependencies.
          # This is a bit hacky, but we do not currently version the packages religously, so we need to do something like this.
          key: ${{ runner.os }}-rust-stack-deps-${{ env.RUST }}-${{ hashFiles('stack.yaml', 'package.yaml', 'deps/concordium-base/haskell-src/**.hs', 'deps/concordium-base/rust-src/Cargo.toml', 'deps/concordium-base/rust-src/**.rs') }}

      - name: Stack build # build all the binaries and tests, but don't run the tests
        run: stack build --flag 'concordium-client:middleware' --test --no-run-tests
      - name: Stack test # run the tests
        run: stack build --flag 'concordium-client:middleware' --test
